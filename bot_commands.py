# bot_commands.py
from aiogram.types import (
    BotCommand,
    BotCommandScopeDefault,
    BotCommandScopeAllPrivateChats,
    BotCommandScopeAllGroupChats,
    BotCommandScopeAllChatAdministrators,
)
from typing import List

def default_commands() -> List[BotCommand]:
    return [
        BotCommand(command="help", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É"),
        BotCommand(command="ping", description="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–æ—Ç–∞"),
        BotCommand(command="id", description="–ü–æ–∫–∞–∑–∞—Ç–∏ chat_id"),
        BotCommand(command="get", description="–°–∫–∞—á–∞—Ç–∏ –≤—ñ–¥–µ–æ (YT/TikTok/IG)"),
        BotCommand(command="joke", description="–ñ–∞—Ä—Ç (GPT/–∫–∞—Å—Ç–æ–º–Ω–∏–π –ø—É–ª)"),
        BotCommand(command="roast", description="–ü—ñ–¥–∫–æ–ª–æ—Ç–∏ @user"),
        BotCommand(command="rps", description="–ö–∞–º—ñ–Ω—å/–Ω–æ–∂–∏—Ü—ñ/–ø–∞–ø—ñ—Ä"),
        BotCommand(command="slot", description="üé∞ –ê–≤—Ç–æ–º–∞—Ç"),
      # modes/schedule
        BotCommand(command="random_on", description="–†–∞–Ω–¥–æ–º–Ω—ñ –≤–∫–∏–¥–∏: ON"),
        BotCommand(command="random_off", description="–†–∞–Ω–¥–æ–º–Ω—ñ –≤–∫–∏–¥–∏: OFF"),
        BotCommand(command="random_window", description="–Ü–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞–Ω–¥–æ–º—É (—Ö–≤)"),
        BotCommand(command="mode", description="–¢–æ–Ω –∂–∞—Ä—Ç—ñ–≤: pg13|r18"),
        BotCommand(command="quiet", description="–¢–∏—Ö—ñ –≥–æ–¥–∏–Ω–∏ –∞–±–æ off"),
        BotCommand(command="morning_on", description="–†–∞–Ω–∫–æ–≤–∏–π –ø—ñ–¥–π–æ–º ON"),
        BotCommand(command="morning_off", description="–†–∞–Ω–∫–æ–≤–∏–π –ø—ñ–¥–π–æ–º OFF"),
        BotCommand(command="morning_time", description="–ß–∞—Å –ø—ñ–¥–π–æ–º—É (HH:MM)"),
        # custom jokes
        BotCommand(command="joke_add", description="–î–æ–¥–∞—Ç–∏ –∂–∞—Ä—Ç —É –ø—É–ª"),
        BotCommand(command="joke_list", description="–°–ø–∏—Å–æ–∫ –∂–∞—Ä—Ç—ñ–≤"),
        BotCommand(command="joke_rm", description="–í–∏–¥–∞–ª–∏—Ç–∏ –∂–∞—Ä—Ç –∑–∞ ID"),
        # air alarms
        BotCommand(command="air_on_kyiv", description="–¢—Ä–∏–≤–æ–≥–∏ –ö–∏—ó–≤ ‚Äî ON"),
        BotCommand(command="air_off_kyiv", description="–¢—Ä–∏–≤–æ–≥–∏ –ö–∏—ó–≤ ‚Äî OFF"),
        BotCommand(command="air_on_region", description="–¢—Ä–∏–≤–æ–≥–∏ –û–±–ª–∞—Å—Ç—å ‚Äî ON"),
        BotCommand(command="air_off_region", description="–¢—Ä–∏–≤–æ–≥–∏ –û–±–ª–∞—Å—Ç—å ‚Äî OFF"),
        BotCommand(command="air_status", description="–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥"),
        # titles
        BotCommand(command="set_title", description="–ó–∞–¥–∞—Ç–∏ —Ç–∏—Ç—É–ª @user"),
        BotCommand(command="title", description="–ü–æ—Ç–æ—á–Ω–∏–π —Ç–∏—Ç—É–ª"),
    ]

def admin_commands() -> List[BotCommand]:
    return [
        BotCommand(command="warn", description="–í–∞—Ä–Ω @user (3 = –∞–≤—Ç–æ–º—É—Ç–∞ 30—Ö–≤)"),
        BotCommand(command="mute", description="–ú‚Äô—é—Ç @user [—Ö–≤]"),
        BotCommand(command="unmute", description="–ó–Ω—è—Ç–∏ –º‚Äô—é—Ç @user"),
        BotCommand(command="ban", description="–ë–∞–Ω @user"),
        BotCommand(command="kick", description="–ö—ñ–∫ @user"),
    ]

async def register_bot_commands(bot):
    # Register menus for different scopes
    await bot.set_my_commands(default_commands(), scope=BotCommandScopeDefault(), language_code="uk")
    await bot.set_my_commands(default_commands(), scope=BotCommandScopeAllPrivateChats(), language_code="uk")
    await bot.set_my_commands(default_commands(), scope=BotCommandScopeAllGroupChats(), language_code="uk")
    await bot.set_my_commands(admin_commands(), scope=BotCommandScopeAllChatAdministrators(), language_code="uk")

async def dump_commands_to_text(bot) -> str:
   
# Pull the registration back and give it as text (for logs/message to admins)
    from aiogram.types import (
        BotCommandScopeDefault, BotCommandScopeAllPrivateChats,
        BotCommandScopeAllGroupChats, BotCommandScopeAllChatAdministrators,
    )
    scopes = [
        ("Default", BotCommandScopeDefault()),
        ("Privates", BotCommandScopeAllPrivateChats()),
        ("Groups", BotCommandScopeAllGroupChats()),
        ("Admins", BotCommandScopeAllChatAdministrators()),
    ]
    lines = []
    for name, scope in scopes:
        cmds = await bot.get_my_commands(scope=scope, language_code="uk")
        if not cmds:
            lines.append(f"[{name}] ‚Äî –Ω–µ–º–∞—î –∫–æ–º–∞–Ω–¥")
            continue
        lines.append(f"[{name}]")
        for c in cmds:
            lines.append(f"/{c.command} ‚Äî {c.description}")
        lines.append("")  # –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫ –º—ñ–∂ —Å–µ–∫—Ü—ñ—è–º–∏
    return "\n".join(lines).strip()
